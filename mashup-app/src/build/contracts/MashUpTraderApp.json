{
  "contractName": "MashUpTraderApp",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "deployedAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        }
      ],
      "name": "PaymentWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "changer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldPriceInWei",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPriceInWei",
          "type": "uint256"
        }
      ],
      "name": "PriceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Purchased",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mashupToken",
      "outputs": [
        {
          "internalType": "contract MashUpToken",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mashupTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "purchase",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "setTokenPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "possibleFranchisor",
          "type": "address"
        }
      ],
      "name": "isTokenFranchisor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"}],\"name\":\"PaymentWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"changer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPriceInWei\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPriceInWei\",\"type\":\"uint256\"}],\"name\":\"PriceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Purchased\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"possibleFranchisor\",\"type\":\"address\"}],\"name\":\"isTokenFranchisor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mashupToken\",\"outputs\":[{\"internalType\":\"contract MashUpToken\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mashupTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"purchase\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setTokenPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"constructor\":{\"params\":{\"deployedAddress\":\"address Deployed address of the MashUpToken contract\",\"tokenId\":\"uint256 TokenID to trade with this app\"}},\"getBalance()\":{\"return\":\"uint256 Payment balance in Wei\"},\"getOwner()\":{\"return\":\"address Address of current owner\"},\"getTokenURI()\":{\"return\":\"string token URI\"},\"isTokenFranchisor(address)\":{\"params\":{\"possibleFranchisor\":\"address The address of the account\"},\"return\":\"bool\"},\"setTokenPrice(uint256)\":{\"params\":{\"newPrice\":\"uint256 The new token price in Wei\"}},\"withdraw()\":{\"details\":\"Calls the withdrawPayment function on the MashUpToken\"}}},\"userdoc\":{\"methods\":{\"constructor\":\"Create a new MashUp Token trading app\",\"getBalance()\":{\"notice\":\"Gets current payment balance of your token payments\"},\"getOwner()\":{\"notice\":\"Gets current token owner\"},\"getTokenURI()\":{\"notice\":\"Gets the metadataURI for the token\"},\"isTokenFranchisor(address)\":{\"notice\":\"Returns true/false if the address provided is for a franchisor\"},\"purchase()\":{\"notice\":\"Provides a way to become a franchisor of a MashUp token for a fee Emits a Purchased event\"},\"setTokenPrice(uint256)\":{\"notice\":\"Sets the token price given a tokenId Emits a PriceChanged event\"},\"withdraw()\":{\"notice\":\"Use to widthraws eth from the payments you recieved during franchising Emits a PaymentWithdrawn event\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/ivanmolto/Documents/Dev/mashup-app-contracts/contracts/MashUpTraderApp.sol\":\"MashUpTraderApp\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ivanmolto/Documents/Dev/mashup-app-contracts/contracts/AbstractSharedRoyaltyToken.sol\":{\"keccak256\":\"0x88aaa7fec7e7c011af7d4a8cfa4ab3a0376ca8c8aa6623415730b2917e1baa0a\",\"urls\":[\"bzz-raw://ed7dd3b77ebf915d6d738a16860d70d13d3bd563a3dee80d561c9f9e2fb9c954\",\"dweb:/ipfs/QmWVVPhz4zPtXPCBeXLwsYXAGVhUSQ3etmCHRYeSCwkYKg\"]},\"/Users/ivanmolto/Documents/Dev/mashup-app-contracts/contracts/BookendSharedRoyaltyToken.sol\":{\"keccak256\":\"0x5112caebf60853c4fc1dc8a78b59c473b24eb442af0f4db38652df7c21168727\",\"urls\":[\"bzz-raw://29b275969def9af3257106a2dca067aebcbea5a1d0c73d7861f28787a5b5ddf4\",\"dweb:/ipfs/QmaTJk7bNLjPREHnDchWLC8gT6zEnM6qu1rwc1rAhy5PLJ\"]},\"/Users/ivanmolto/Documents/Dev/mashup-app-contracts/contracts/ERC721/ERC721.sol\":{\"keccak256\":\"0x0c385e22925fa325518a6f3938d845a62e2d72d7c2695a62e52428709adce3dc\",\"urls\":[\"bzz-raw://4f9b2418d70d5bc046c35d37ef123e91a01f26f0d46c3c9946aa57ffdf3878b3\",\"dweb:/ipfs/QmefuKCoczSUqotkQFZgd9iroS48peJmMkbNEWHxQkkpY3\"]},\"/Users/ivanmolto/Documents/Dev/mashup-app-contracts/contracts/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x98442c2255af215b4383a8ead84b95fce3ee573bc3dcb463bfc3e0bb0f7cd3c5\",\"urls\":[\"bzz-raw://efb56b054c3c26c34344bb14ab2f2cc88c6d1884cfffbe2c07f5870e1a0d53a5\",\"dweb:/ipfs/QmTkg37xXMX1xHLarFhbgn5qzfBMqFgTEfX8PYPLYH1o9M\"]},\"/Users/ivanmolto/Documents/Dev/mashup-app-contracts/contracts/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0x85658e70bf5df15c9d8b359ed75e6db2e4222f1bd0d3db770b2766a9b77f8742\",\"urls\":[\"bzz-raw://b88ccde6398c8eba6b285841dbbdeee9f3b02de3ec847d94d67f84a4c77fe0af\",\"dweb:/ipfs/QmQyapESt8WzYuun8d4ePyCJCVhMa7tXtTG96bxz9g74w2\"]},\"/Users/ivanmolto/Documents/Dev/mashup-app-contracts/contracts/ERC721/ERC721MetadataMintable.sol\":{\"keccak256\":\"0xcc1a52c7a19ca7d6ad65a5699c7e5d08731dbbae0db078b413ffcd39b7b73fb8\",\"urls\":[\"bzz-raw://08b1126dd40f4d0c5a829bf13f6cf17fd104fd3fbd5e8ee88cfc9653bee51fe6\",\"dweb:/ipfs/QmVj4c72ACioszT2qR4tvze5KdphicJdixg4BgXnsxGebf\"]},\"/Users/ivanmolto/Documents/Dev/mashup-app-contracts/contracts/ERC721/IERC721.sol\":{\"keccak256\":\"0x7dcb6ad2cf3f387930b7e6e0060df1bfc78196a88465178cf18df005b9185398\",\"urls\":[\"bzz-raw://1fc67a14bcdcb4e23928d3f377afed9d94eefb9e0306ac9fce9d72fecaa9d669\",\"dweb:/ipfs/QmNrMu2a9MQDWriJHZ2cc4GComGmV51b7ojnfTGJFcH9ja\"]},\"/Users/ivanmolto/Documents/Dev/mashup-app-contracts/contracts/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x2117f271b4aa32b0866aa3c6781b42bb63ec974fa4f41fa6982fcba70eb2dad8\",\"urls\":[\"bzz-raw://9a522f361ca18f05ca641ead932c9369086e591a4d9c70fad5dc95c48f187d2f\",\"dweb:/ipfs/QmU9wvf91mAAomfkK1JsxEUXxbGZbGJas1KaAofUiix1M1\"]},\"/Users/ivanmolto/Documents/Dev/mashup-app-contracts/contracts/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xe6c6512c0c2b5a84ce2b8b1473ac2debdf2b87670c4c337b2f9a72697733e063\",\"urls\":[\"bzz-raw://b965c51bce3a34acdcfdd4cb5002977765a1bb55167b7972f64093b91b067ba2\",\"dweb:/ipfs/QmNbNdAfJNE59e1Y3DNrCSiDn4F9F1iKjWzLkmujgdj3jd\"]},\"/Users/ivanmolto/Documents/Dev/mashup-app-contracts/contracts/ISharedRoyaltyToken.sol\":{\"keccak256\":\"0x1e8b1b32d9023f7d6598bfb2b61dc38ef4bfea49b6c1d4808fb8b68a7487161a\",\"urls\":[\"bzz-raw://7d673cfdc42ac6bd608eb7aecdf2ba3c07f0373649de5ee5dff7e9ccfc74ba31\",\"dweb:/ipfs/QmYejfufoK2GRzovbXFQemoM5DARRFg6zGzXBE5xxyTNJR\"]},\"/Users/ivanmolto/Documents/Dev/mashup-app-contracts/contracts/MashUpToken.sol\":{\"keccak256\":\"0x4d631c581d1cb752256a7b103ecea351ca43f42acbd51aca3fa4d3bd9fe9422c\",\"urls\":[\"bzz-raw://d9c8f92b2cf0771c51676e2fddb3b94db0e8a471f2dc77d8d6cd3529473fd43b\",\"dweb:/ipfs/QmfNK837dcFVfSTMzhK7E268p4obMrUH6ZEzSbz1WoiZme\"]},\"/Users/ivanmolto/Documents/Dev/mashup-app-contracts/contracts/MashUpTraderApp.sol\":{\"keccak256\":\"0xe49adc094f5c8fdc7a4901aa67f511588c6cd3a0a4e00a8e770031a188958fe3\",\"urls\":[\"bzz-raw://a3052419bbc149e9189733d87d9cdaa273ba298856eacb63cf63c225ac54839e\",\"dweb:/ipfs/QmVpnjYp43fc5v2RFPCacsNTYD2SgBNbtyk94gPr4AZZSf\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xbe8eef6f2cb4e427f5c5d8a76865ccd06e55a4f1d6671ba312d45bfa705aedbf\",\"urls\":[\"bzz-raw://badf338a5e22c8658c01fe2ce89b487d9dbf6d2d9d5eb49df7415383e2498765\",\"dweb:/ipfs/QmP5aMkvFwMJyuQjKE8ADh5tkWYqonb4KjgkAjgYEVVFAv\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x01aedbf24e121a744262e04c7815b2a4c8ce604dee4829c5cff00943a594ccf3\",\"urls\":[\"bzz-raw://999ab32a6498d8ad8db61d47c3774aae2ff919acceebe2aeb50879bef62642c3\",\"dweb:/ipfs/QmephAYF5hoymu9qCFK6mURM2kZJCxU4ntUb4KTf1miVPT\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610e87380380610e878339818101604052604081101561003357600080fd5b810190808051906020019092919080519060200190929190505050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806001819055505050610de1806100a66000396000f3fe6080604052600436106100915760003560e01c80636a61e5fc116100595780636a61e5fc146101645780637ff9b5961461019f578063893d20e8146101ca5780638a421b7414610221578063d4a191161461028a57610091565b806301f586a2146100965780630c050fa9146100c157806312065fe0146101185780633ccfd60b1461014357806364edfbf01461015a575b600080fd5b3480156100a257600080fd5b506100ab61031a565b6040518082815260200191505060405180910390f35b3480156100cd57600080fd5b506100d6610320565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012457600080fd5b5061012d610345565b6040518082815260200191505060405180910390f35b34801561014f57600080fd5b5061015861042f565b005b610162610556565b005b34801561017057600080fd5b5061019d6004803603602081101561018757600080fd5b8101908080359060200190929190505050610849565b005b3480156101ab57600080fd5b506101b4610a06565b6040518082815260200191505060405180910390f35b3480156101d657600080fd5b506101df610a0c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022d57600080fd5b506102706004803603602081101561024457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ac2565b604051808215151515815260200191505060405180910390f35b34801561029657600080fd5b5061029f610bae565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102df5780820151818401526020810190506102c4565b50505050905090810190601f16801561030c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663919c3db5336001546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b1580156103ef57600080fd5b505afa158015610403573d6000803e3d6000fd5b505050506040513d602081101561041957600080fd5b8101908080519060200190929190505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e2cdba7336001546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156104d957600080fd5b505af11580156104ed573d6000803e3d6000fd5b505050507f832e43df4de2c3bcddde0796ab3950a40343a9a1f5f39d6b25c0d670877f4e2233604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000600254116105b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180610d23603a913960400191505060405180910390fd5b600254341461060b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180610d5d6027913960400191505060405180910390fd5b600033905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e6001546040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561068657600080fd5b505afa15801561069a573d6000803e3d6000fd5b505050506040513d60208110156106b057600080fd5b810190808051906020019092919050505090506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3483856001546040518563ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001806020018281038252600081526020016020019450505050506000604051808303818588803b1580156107b557600080fd5b505af11580156107c9573d6000803e3d6000fd5b50505050506107d86000610849565b7fa512fb2532ca8587f236380171326ebb69670e86a2ba0c4412a3fcca4c3ada9b82600254604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e6001546040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156108bf57600080fd5b505afa1580156108d3573d6000803e3d6000fd5b505050506040513d60208110156108e957600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610980576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180610d846029913960400191505060405180910390fd5b60006002549050826002819055507f4d624906ce6fd4e4b8b649463516ff505029a1903a8cc34bd82b4ca0f9a479de338285604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a1505050565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e6001546040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610a8257600080fd5b505afa158015610a96573d6000803e3d6000fd5b505050506040513d6020811015610aac57600080fd5b8101908080519060200190929190505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a2378bdf836001546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b158015610b6c57600080fd5b505afa158015610b80573d6000803e3d6000fd5b505050506040513d6020811015610b9657600080fd5b81019080805190602001909291905050509050919050565b60606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c87b56dd6001546040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b158015610c2457600080fd5b505afa158015610c38573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610c6257600080fd5b8101908080516040519392919084640100000000821115610c8257600080fd5b83820191506020820185811115610c9857600080fd5b8251866001820283011164010000000082111715610cb557600080fd5b8083526020830192505050908051906020019080838360005b83811015610ce9578082015181840152602081019050610cce565b50505050905090810190601f168015610d165780820380516001836020036101000a031916815260200191505b5060405250505090509056fe546f6b656e206d7573742068617665206e6f6e2d7a65726f207072696365206265666f72652069742063616e206265206672616e6368697365644d7573742070726f766964652065746820746f206672616e63686973652074686520746f6b656e4f6e6c7920746865206f776e65722063616e206368616e67652074686520746f6b656e207072696365a265627a7a723158206fd6e9789c84ee9e4574a65a7270113f5e7db61342ee2fe54f21c6ea56d5e3f064736f6c63430005100032",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c80636a61e5fc116100595780636a61e5fc146101645780637ff9b5961461019f578063893d20e8146101ca5780638a421b7414610221578063d4a191161461028a57610091565b806301f586a2146100965780630c050fa9146100c157806312065fe0146101185780633ccfd60b1461014357806364edfbf01461015a575b600080fd5b3480156100a257600080fd5b506100ab61031a565b6040518082815260200191505060405180910390f35b3480156100cd57600080fd5b506100d6610320565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012457600080fd5b5061012d610345565b6040518082815260200191505060405180910390f35b34801561014f57600080fd5b5061015861042f565b005b610162610556565b005b34801561017057600080fd5b5061019d6004803603602081101561018757600080fd5b8101908080359060200190929190505050610849565b005b3480156101ab57600080fd5b506101b4610a06565b6040518082815260200191505060405180910390f35b3480156101d657600080fd5b506101df610a0c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022d57600080fd5b506102706004803603602081101561024457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ac2565b604051808215151515815260200191505060405180910390f35b34801561029657600080fd5b5061029f610bae565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102df5780820151818401526020810190506102c4565b50505050905090810190601f16801561030c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663919c3db5336001546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b1580156103ef57600080fd5b505afa158015610403573d6000803e3d6000fd5b505050506040513d602081101561041957600080fd5b8101908080519060200190929190505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e2cdba7336001546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156104d957600080fd5b505af11580156104ed573d6000803e3d6000fd5b505050507f832e43df4de2c3bcddde0796ab3950a40343a9a1f5f39d6b25c0d670877f4e2233604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000600254116105b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180610d23603a913960400191505060405180910390fd5b600254341461060b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180610d5d6027913960400191505060405180910390fd5b600033905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e6001546040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561068657600080fd5b505afa15801561069a573d6000803e3d6000fd5b505050506040513d60208110156106b057600080fd5b810190808051906020019092919050505090506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3483856001546040518563ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001806020018281038252600081526020016020019450505050506000604051808303818588803b1580156107b557600080fd5b505af11580156107c9573d6000803e3d6000fd5b50505050506107d86000610849565b7fa512fb2532ca8587f236380171326ebb69670e86a2ba0c4412a3fcca4c3ada9b82600254604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e6001546040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156108bf57600080fd5b505afa1580156108d3573d6000803e3d6000fd5b505050506040513d60208110156108e957600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610980576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180610d846029913960400191505060405180910390fd5b60006002549050826002819055507f4d624906ce6fd4e4b8b649463516ff505029a1903a8cc34bd82b4ca0f9a479de338285604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a1505050565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e6001546040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610a8257600080fd5b505afa158015610a96573d6000803e3d6000fd5b505050506040513d6020811015610aac57600080fd5b8101908080519060200190929190505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a2378bdf836001546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b158015610b6c57600080fd5b505afa158015610b80573d6000803e3d6000fd5b505050506040513d6020811015610b9657600080fd5b81019080805190602001909291905050509050919050565b60606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c87b56dd6001546040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b158015610c2457600080fd5b505afa158015610c38573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610c6257600080fd5b8101908080516040519392919084640100000000821115610c8257600080fd5b83820191506020820185811115610c9857600080fd5b8251866001820283011164010000000082111715610cb557600080fd5b8083526020830192505050908051906020019080838360005b83811015610ce9578082015181840152602081019050610cce565b50505050905090810190601f168015610d165780820380516001836020036101000a031916815260200191505b5060405250505090509056fe546f6b656e206d7573742068617665206e6f6e2d7a65726f207072696365206265666f72652069742063616e206265206672616e6368697365644d7573742070726f766964652065746820746f206672616e63686973652074686520746f6b656e4f6e6c7920746865206f776e65722063616e206368616e67652074686520746f6b656e207072696365a265627a7a723158206fd6e9789c84ee9e4574a65a7270113f5e7db61342ee2fe54f21c6ea56d5e3f064736f6c63430005100032",
  "sourceMap": "55:3778:12:-;;;801:153;8:9:-1;5:2;;;30:1;27;20:12;5:2;801:153:12;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;801:153:12;;;;;;;;;;;;;;;;;;;;;;;;;898:15;872:11;;:42;;;;;;;;;;;;;;;;;;940:7;924:13;:23;;;;801:153;;55:3778;;;;;;",
  "deployedSourceMap": "55:3778:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;229:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;229:28:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;119:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;119:30:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2725:131;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2725:131:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3068:142;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3068:142:12;;;:::i;:::-;;1088:698;;;:::i;:::-;;1952:420;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1952:420:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1952:420:12;;;;;;;;;;;;;;;;;:::i;:::-;;325:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;325:25:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2482:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2482:108:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3621:210;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3621:210:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3621:210:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3315:118;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3315:118:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3315:118:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;229:28;;;;:::o;119:30::-;;;;;;;;;;;;;:::o;2725:131::-;2768:7;2794:11;;;;;;;;;;;:28;;;2823:10;2835:13;;2794:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2794:55:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2794:55:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2794:55:12;;;;;;;;;;;;;;;;2787:62;;2725:131;:::o;3068:142::-;3105:11;;;;;;;;;;;:27;;;3133:10;3145:13;;3105:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3105:54:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3105:54:12;;;;3175:28;3192:10;3175:28;;;;;;;;;;;;;;;;;;;;;;3068:142::o;1088:698::-;1167:1;1154:10;;:14;1133:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1296:10;;1283:9;:23;1262:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1382:16;1401:10;1382:29;;1421:13;1437:11;;;;;;;;;;;:19;;;1457:13;;1437:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1437:34:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1437:34:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1437:34:12;;;;;;;;;;;;;;;;1421:50;;1514:11;;;;;;;;;;;:28;;;1549:9;1573:5;1592:8;1614:13;;1514:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1514:139:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1514:139:12;;;;;1716:16;1730:1;1716:13;:16::i;:::-;1748:31;1758:8;1768:10;;1748:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;1088:698;;:::o;1952:420::-;2010:20;2033:11;;;;;;;;;;;:19;;;2053:13;;2033:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2033:34:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2033:34:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2033:34:12;;;;;;;;;;;;;;;;2010:57;;2156:12;2142:26;;:10;:26;;;2121:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:16;2264:10;;2245:29;;2297:8;2284:10;:21;;;;2321:44;2334:10;2346:8;2356;2321:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1952:420;;;:::o;325:25::-;;;;:::o;2482:108::-;2523:7;2549:11;;;;;;;;;;;:19;;;2569:13;;2549:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2549:34:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2549:34:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2549:34:12;;;;;;;;;;;;;;;;2542:41;;2482:108;:::o;3621:210::-;3721:4;3760:11;;;;;;;;;;;:29;;;3790:18;3810:13;;3760:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3760:64:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3760:64:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3760:64:12;;;;;;;;;;;;;;;;3741:83;;3621:210;;;:::o;3315:118::-;3359:13;3391:11;;;;;;;;;;;:20;;;3412:13;;3391:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3391:35:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3391:35:12;;;;;;39:16:-1;36:1;17:17;2:54;3391:35:12;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3391:35:12;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;3391:35:12;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3391:35:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3384:42;;3315:118;:::o",
  "source": "pragma solidity ^0.5.4;\n\nimport \"./MashUpToken.sol\";\n\n\ncontract MashUpTraderApp {\n    // The mashup token contract\n    MashUpToken public mashupToken;\n    // Only trading one token for this dApp, this is the ID for the token\n    uint256 public mashupTokenId;\n    // Only one token traded only requires one price to store\n    uint256 public tokenPrice;\n\n    event Purchased(address newOwner, uint256 weiAmount);\n    event PriceChanged(\n        address changer,\n        uint256 oldPriceInWei,\n        uint256 newPriceInWei\n    );\n    event PaymentWithdrawn(address withdrawer);\n\n    /**\n     * @notice Create a new MashUp Token trading app\n     *\n     * @param deployedAddress address Deployed address of the MashUpToken contract\n     * @param tokenId uint256 TokenID to trade with this app\n     */\n    constructor(address deployedAddress, uint256 tokenId) public {\n        mashupToken = MashUpToken(deployedAddress);\n        mashupTokenId = tokenId;\n    }\n\n    /**\n     * @notice Provides a way to become a franchisor of a MashUp token for a fee\n     * Emits a Purchased event\n     */\n    function purchase() public payable {\n        require(\n            tokenPrice > 0,\n            \"Token must have non-zero price before it can be franchised\"\n        );\n        require(\n            msg.value == tokenPrice,\n            \"Must provide eth to franchise the token\"\n        );\n\n        address newOwner = msg.sender;\n        address owner = mashupToken.ownerOf(mashupTokenId);\n        // Do the token transfer\n        mashupToken.safeTransferFrom.value(msg.value)(\n            owner,\n            newOwner,\n            mashupTokenId,\n            \"\"\n        );\n        // set the price to zero to prevent purchase\n        setTokenPrice(0);\n\n        emit Purchased(newOwner, tokenPrice);\n    }\n\n    /**\n     * @notice Sets the token price given a tokenId\n     * Emits a PriceChanged event\n     * @param newPrice uint256 The new token price in Wei\n     */\n    function setTokenPrice(uint256 newPrice) public {\n        address currentOwner = mashupToken.ownerOf(mashupTokenId);\n        // TODO: Or allow minter to do this\n        require(\n            msg.sender == currentOwner,\n            \"Only the owner can change the token price\"\n        );\n        uint256 oldPrice = tokenPrice;\n        tokenPrice = newPrice;\n\n        emit PriceChanged(msg.sender, oldPrice, newPrice);\n    }\n\n    /**\n     * @notice Gets current token owner\n     * @return address Address of current owner\n     */\n    function getOwner() public view returns (address) {\n        return mashupToken.ownerOf(mashupTokenId);\n    }\n\n    /**\n     * @notice Gets current payment balance of your token payments\n     * @return uint256 Payment balance in Wei\n     */\n    function getBalance() public view returns (uint256) {\n        return mashupToken.paymentBalanceOf(msg.sender, mashupTokenId);\n    }\n\n    /**\n     * @notice Use to widthraws eth from the payments you recieved during franchising\n     * Emits a PaymentWithdrawn event\n     * @dev Calls the withdrawPayment function on the MashUpToken\n     */\n    function withdraw() public {\n        mashupToken.withdrawPayment(msg.sender, mashupTokenId);\n\n        emit PaymentWithdrawn(msg.sender);\n    }\n\n    /**\n     * @notice  Gets the metadataURI for the token\n     * @return string token URI\n     */\n    function getTokenURI() public view returns (string memory) {\n        return mashupToken.tokenURI(mashupTokenId);\n    }\n\n    /**\n     * @notice Returns true/false if the address provided is for a franchisor\n     * @param possibleFranchisor address The address of the account\n     * @return bool\n     */\n    function isTokenFranchisor(address possibleFranchisor)\n        public\n        view\n        returns (bool)\n    {\n        return\n            mashupToken.isTokenFranchisor(possibleFranchisor, mashupTokenId);\n    }\n}\n",
  "sourcePath": "/Users/ivanmolto/Documents/Dev/mashup-app-contracts/contracts/MashUpTraderApp.sol",
  "ast": {
    "absolutePath": "/Users/ivanmolto/Documents/Dev/mashup-app-contracts/contracts/MashUpTraderApp.sol",
    "exportedSymbols": {
      "MashUpTraderApp": [
        2098
      ]
    },
    "id": 2099,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1898,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "/Users/ivanmolto/Documents/Dev/mashup-app-contracts/contracts/MashUpToken.sol",
        "file": "./MashUpToken.sol",
        "id": 1899,
        "nodeType": "ImportDirective",
        "scope": 2099,
        "sourceUnit": 1897,
        "src": "25:27:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2098,
        "linearizedBaseContracts": [
          2098
        ],
        "name": "MashUpTraderApp",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1901,
            "name": "mashupToken",
            "nodeType": "VariableDeclaration",
            "scope": 2098,
            "src": "119:30:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MashUpToken_$1896",
              "typeString": "contract MashUpToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 1900,
              "name": "MashUpToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1896,
              "src": "119:11:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MashUpToken_$1896",
                "typeString": "contract MashUpToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1903,
            "name": "mashupTokenId",
            "nodeType": "VariableDeclaration",
            "scope": 2098,
            "src": "229:28:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1902,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "229:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1905,
            "name": "tokenPrice",
            "nodeType": "VariableDeclaration",
            "scope": 2098,
            "src": "325:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1904,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "325:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1911,
            "name": "Purchased",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1907,
                  "indexed": false,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1911,
                  "src": "373:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1909,
                  "indexed": false,
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1911,
                  "src": "391:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "391:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "372:37:12"
            },
            "src": "357:53:12"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1919,
            "name": "PriceChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1913,
                  "indexed": false,
                  "name": "changer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "443:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1915,
                  "indexed": false,
                  "name": "oldPriceInWei",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "468:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1914,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1917,
                  "indexed": false,
                  "name": "newPriceInWei",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "499:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "499:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "433:93:12"
            },
            "src": "415:112:12"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1923,
            "name": "PaymentWithdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1921,
                  "indexed": false,
                  "name": "withdrawer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1923,
                  "src": "555:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "555:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "554:20:12"
            },
            "src": "532:43:12"
          },
          {
            "body": {
              "id": 1940,
              "nodeType": "Block",
              "src": "862:92:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1930,
                      "name": "mashupToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1901,
                      "src": "872:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MashUpToken_$1896",
                        "typeString": "contract MashUpToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1932,
                          "name": "deployedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1925,
                          "src": "898:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1931,
                        "name": "MashUpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1896,
                        "src": "886:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MashUpToken_$1896_$",
                          "typeString": "type(contract MashUpToken)"
                        }
                      },
                      "id": 1933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "886:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MashUpToken_$1896",
                        "typeString": "contract MashUpToken"
                      }
                    },
                    "src": "872:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MashUpToken_$1896",
                      "typeString": "contract MashUpToken"
                    }
                  },
                  "id": 1935,
                  "nodeType": "ExpressionStatement",
                  "src": "872:42:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1936,
                      "name": "mashupTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1903,
                      "src": "924:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1937,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1927,
                      "src": "940:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "924:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1939,
                  "nodeType": "ExpressionStatement",
                  "src": "924:23:12"
                }
              ]
            },
            "documentation": "@notice Create a new MashUp Token trading app\n     * @param deployedAddress address Deployed address of the MashUpToken contract\n@param tokenId uint256 TokenID to trade with this app",
            "id": 1941,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1925,
                  "name": "deployedAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1941,
                  "src": "813:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1924,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "813:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1927,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1941,
                  "src": "838:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "838:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "812:42:12"
            },
            "returnParameters": {
              "id": 1929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "862:0:12"
            },
            "scope": 2098,
            "src": "801:153:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1994,
              "nodeType": "Block",
              "src": "1123:663:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1945,
                          "name": "tokenPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1905,
                          "src": "1154:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1167:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1154:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e206d7573742068617665206e6f6e2d7a65726f207072696365206265666f72652069742063616e206265206672616e636869736564",
                        "id": 1948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1182:60:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c87d2a30039208080f6344ac41c23feb272d9d49cd6396a3d09624277f33294",
                          "typeString": "literal_string \"Token must have non-zero price before it can be franchised\""
                        },
                        "value": "Token must have non-zero price before it can be franchised"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c87d2a30039208080f6344ac41c23feb272d9d49cd6396a3d09624277f33294",
                          "typeString": "literal_string \"Token must have non-zero price before it can be franchised\""
                        }
                      ],
                      "id": 1944,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2728,
                        2729
                      ],
                      "referencedDeclaration": 2729,
                      "src": "1133:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1133:119:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1950,
                  "nodeType": "ExpressionStatement",
                  "src": "1133:119:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1952,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2725,
                            "src": "1283:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1283:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1954,
                          "name": "tokenPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1905,
                          "src": "1296:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1283:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d7573742070726f766964652065746820746f206672616e63686973652074686520746f6b656e",
                        "id": 1956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1320:41:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db1c4afa70070234d21e4fbdb1a4eaae774abfde4abd58eba615b76969de06b4",
                          "typeString": "literal_string \"Must provide eth to franchise the token\""
                        },
                        "value": "Must provide eth to franchise the token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db1c4afa70070234d21e4fbdb1a4eaae774abfde4abd58eba615b76969de06b4",
                          "typeString": "literal_string \"Must provide eth to franchise the token\""
                        }
                      ],
                      "id": 1951,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2728,
                        2729
                      ],
                      "referencedDeclaration": 2729,
                      "src": "1262:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1262:109:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1958,
                  "nodeType": "ExpressionStatement",
                  "src": "1262:109:12"
                },
                {
                  "assignments": [
                    1960
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1960,
                      "name": "newOwner",
                      "nodeType": "VariableDeclaration",
                      "scope": 1994,
                      "src": "1382:16:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1959,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1382:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1963,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1961,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2725,
                      "src": "1401:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1401:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1382:29:12"
                },
                {
                  "assignments": [
                    1965
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1965,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 1994,
                      "src": "1421:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1964,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1421:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1970,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1968,
                        "name": "mashupTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1903,
                        "src": "1457:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1966,
                        "name": "mashupToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1901,
                        "src": "1437:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MashUpToken_$1896",
                          "typeString": "contract MashUpToken"
                        }
                      },
                      "id": 1967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 614,
                      "src": "1437:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 1969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1421:50:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1979,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1965,
                        "src": "1573:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1980,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1960,
                        "src": "1592:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1981,
                        "name": "mashupTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1903,
                        "src": "1614:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 1982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1641:2:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1976,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2725,
                            "src": "1549:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1549:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1971,
                            "name": "mashupToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1901,
                            "src": "1514:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MashUpToken_$1896",
                              "typeString": "contract MashUpToken"
                            }
                          },
                          "id": 1974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "safeTransferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 775,
                          "src": "1514:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                            "typeString": "function (address,address,uint256,bytes memory) payable external"
                          }
                        },
                        "id": 1975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1514:34:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$value_$",
                          "typeString": "function (uint256) pure returns (function (address,address,uint256,bytes memory) payable external)"
                        }
                      },
                      "id": 1978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1514:45:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$value",
                        "typeString": "function (address,address,uint256,bytes memory) payable external"
                      }
                    },
                    "id": 1983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1514:139:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1984,
                  "nodeType": "ExpressionStatement",
                  "src": "1514:139:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1730:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 1985,
                      "name": "setTokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2031,
                      "src": "1716:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1716:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1988,
                  "nodeType": "ExpressionStatement",
                  "src": "1716:16:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1990,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1960,
                        "src": "1758:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1991,
                        "name": "tokenPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1905,
                        "src": "1768:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1989,
                      "name": "Purchased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1911,
                      "src": "1748:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1748:31:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1993,
                  "nodeType": "EmitStatement",
                  "src": "1743:36:12"
                }
              ]
            },
            "documentation": "@notice Provides a way to become a franchisor of a MashUp token for a fee\nEmits a Purchased event",
            "id": 1995,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1105:2:12"
            },
            "returnParameters": {
              "id": 1943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1123:0:12"
            },
            "scope": 2098,
            "src": "1088:698:12",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2030,
              "nodeType": "Block",
              "src": "2000:372:12",
              "statements": [
                {
                  "assignments": [
                    2001
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2001,
                      "name": "currentOwner",
                      "nodeType": "VariableDeclaration",
                      "scope": 2030,
                      "src": "2010:20:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2000,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2010:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2006,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2004,
                        "name": "mashupTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1903,
                        "src": "2053:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2002,
                        "name": "mashupToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1901,
                        "src": "2033:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MashUpToken_$1896",
                          "typeString": "contract MashUpToken"
                        }
                      },
                      "id": 2003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 614,
                      "src": "2033:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 2005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2033:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2010:57:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2008,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2725,
                            "src": "2142:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2142:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2010,
                          "name": "currentOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2001,
                          "src": "2156:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2142:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c7920746865206f776e65722063616e206368616e67652074686520746f6b656e207072696365",
                        "id": 2012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2182:43:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eea1d6680cedc31b44d88c0af8cb14519aea90dcf44b3e2afbb82981a94a4ddd",
                          "typeString": "literal_string \"Only the owner can change the token price\""
                        },
                        "value": "Only the owner can change the token price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eea1d6680cedc31b44d88c0af8cb14519aea90dcf44b3e2afbb82981a94a4ddd",
                          "typeString": "literal_string \"Only the owner can change the token price\""
                        }
                      ],
                      "id": 2007,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2728,
                        2729
                      ],
                      "referencedDeclaration": 2729,
                      "src": "2121:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2121:114:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2014,
                  "nodeType": "ExpressionStatement",
                  "src": "2121:114:12"
                },
                {
                  "assignments": [
                    2016
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2016,
                      "name": "oldPrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 2030,
                      "src": "2245:16:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2015,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2245:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2018,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2017,
                    "name": "tokenPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1905,
                    "src": "2264:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2245:29:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2019,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1905,
                      "src": "2284:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2020,
                      "name": "newPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1997,
                      "src": "2297:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2284:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2022,
                  "nodeType": "ExpressionStatement",
                  "src": "2284:21:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2024,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2725,
                          "src": "2334:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2334:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2026,
                        "name": "oldPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2016,
                        "src": "2346:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2027,
                        "name": "newPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1997,
                        "src": "2356:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2023,
                      "name": "PriceChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1919,
                      "src": "2321:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2321:44:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2029,
                  "nodeType": "EmitStatement",
                  "src": "2316:49:12"
                }
              ]
            },
            "documentation": "@notice Sets the token price given a tokenId\nEmits a PriceChanged event\n@param newPrice uint256 The new token price in Wei",
            "id": 2031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTokenPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1997,
                  "name": "newPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 2031,
                  "src": "1975:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1975:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1974:18:12"
            },
            "returnParameters": {
              "id": 1999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2000:0:12"
            },
            "scope": 2098,
            "src": "1952:420:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2041,
              "nodeType": "Block",
              "src": "2532:58:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2038,
                        "name": "mashupTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1903,
                        "src": "2569:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2036,
                        "name": "mashupToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1901,
                        "src": "2549:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MashUpToken_$1896",
                          "typeString": "contract MashUpToken"
                        }
                      },
                      "id": 2037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 614,
                      "src": "2549:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 2039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2549:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2035,
                  "id": 2040,
                  "nodeType": "Return",
                  "src": "2542:41:12"
                }
              ]
            },
            "documentation": "@notice Gets current token owner\n@return address Address of current owner",
            "id": 2042,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2499:2:12"
            },
            "returnParameters": {
              "id": 2035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2034,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2042,
                  "src": "2523:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2523:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2522:9:12"
            },
            "scope": 2098,
            "src": "2482:108:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2054,
              "nodeType": "Block",
              "src": "2777:79:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2049,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2725,
                          "src": "2823:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2823:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2051,
                        "name": "mashupTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1903,
                        "src": "2835:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2047,
                        "name": "mashupToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1901,
                        "src": "2794:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MashUpToken_$1896",
                          "typeString": "contract MashUpToken"
                        }
                      },
                      "id": 2048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "paymentBalanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 216,
                      "src": "2794:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 2052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2794:55:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2046,
                  "id": 2053,
                  "nodeType": "Return",
                  "src": "2787:62:12"
                }
              ]
            },
            "documentation": "@notice Gets current payment balance of your token payments\n@return uint256 Payment balance in Wei",
            "id": 2055,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2744:2:12"
            },
            "returnParameters": {
              "id": 2046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2045,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2055,
                  "src": "2768:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2044,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2768:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2767:9:12"
            },
            "scope": 2098,
            "src": "2725:131:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2071,
              "nodeType": "Block",
              "src": "3095:115:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2061,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2725,
                          "src": "3133:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3133:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2063,
                        "name": "mashupTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1903,
                        "src": "3145:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2058,
                        "name": "mashupToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1901,
                        "src": "3105:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MashUpToken_$1896",
                          "typeString": "contract MashUpToken"
                        }
                      },
                      "id": 2060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawPayment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 184,
                      "src": "3105:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256) external"
                      }
                    },
                    "id": 2064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3105:54:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2065,
                  "nodeType": "ExpressionStatement",
                  "src": "3105:54:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2067,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2725,
                          "src": "3192:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3192:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2066,
                      "name": "PaymentWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1923,
                      "src": "3175:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3175:28:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2070,
                  "nodeType": "EmitStatement",
                  "src": "3170:33:12"
                }
              ]
            },
            "documentation": "@notice Use to widthraws eth from the payments you recieved during franchising\nEmits a PaymentWithdrawn event\n@dev Calls the withdrawPayment function on the MashUpToken",
            "id": 2072,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3085:2:12"
            },
            "returnParameters": {
              "id": 2057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3095:0:12"
            },
            "scope": 2098,
            "src": "3068:142:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2082,
              "nodeType": "Block",
              "src": "3374:59:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2079,
                        "name": "mashupTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1903,
                        "src": "3412:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2077,
                        "name": "mashupToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1901,
                        "src": "3391:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MashUpToken_$1896",
                          "typeString": "contract MashUpToken"
                        }
                      },
                      "id": 2078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1474,
                      "src": "3391:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory)"
                      }
                    },
                    "id": 2080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3391:35:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 2076,
                  "id": 2081,
                  "nodeType": "Return",
                  "src": "3384:42:12"
                }
              ]
            },
            "documentation": "@notice  Gets the metadataURI for the token\n@return string token URI",
            "id": 2083,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3335:2:12"
            },
            "returnParameters": {
              "id": 2076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2075,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "3359:13:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2074,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3359:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3358:15:12"
            },
            "scope": 2098,
            "src": "3315:118:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2096,
              "nodeType": "Block",
              "src": "3731:100:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2092,
                        "name": "possibleFranchisor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2085,
                        "src": "3790:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2093,
                        "name": "mashupTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1903,
                        "src": "3810:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2090,
                        "name": "mashupToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1901,
                        "src": "3760:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MashUpToken_$1896",
                          "typeString": "contract MashUpToken"
                        }
                      },
                      "id": 2091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isTokenFranchisor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1870,
                      "src": "3760:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) view external returns (bool)"
                      }
                    },
                    "id": 2094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3760:64:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2089,
                  "id": 2095,
                  "nodeType": "Return",
                  "src": "3741:83:12"
                }
              ]
            },
            "documentation": "@notice Returns true/false if the address provided is for a franchisor\n@param possibleFranchisor address The address of the account\n@return bool",
            "id": 2097,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTokenFranchisor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2085,
                  "name": "possibleFranchisor",
                  "nodeType": "VariableDeclaration",
                  "scope": 2097,
                  "src": "3648:26:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2084,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3648:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3647:28:12"
            },
            "returnParameters": {
              "id": 2089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2088,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2097,
                  "src": "3721:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2087,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3721:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3720:6:12"
            },
            "scope": 2098,
            "src": "3621:210:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2099,
        "src": "55:3778:12"
      }
    ],
    "src": "0:3834:12"
  },
  "legacyAST": {
    "absolutePath": "/Users/ivanmolto/Documents/Dev/mashup-app-contracts/contracts/MashUpTraderApp.sol",
    "exportedSymbols": {
      "MashUpTraderApp": [
        2098
      ]
    },
    "id": 2099,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1898,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "/Users/ivanmolto/Documents/Dev/mashup-app-contracts/contracts/MashUpToken.sol",
        "file": "./MashUpToken.sol",
        "id": 1899,
        "nodeType": "ImportDirective",
        "scope": 2099,
        "sourceUnit": 1897,
        "src": "25:27:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2098,
        "linearizedBaseContracts": [
          2098
        ],
        "name": "MashUpTraderApp",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1901,
            "name": "mashupToken",
            "nodeType": "VariableDeclaration",
            "scope": 2098,
            "src": "119:30:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MashUpToken_$1896",
              "typeString": "contract MashUpToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 1900,
              "name": "MashUpToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1896,
              "src": "119:11:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MashUpToken_$1896",
                "typeString": "contract MashUpToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1903,
            "name": "mashupTokenId",
            "nodeType": "VariableDeclaration",
            "scope": 2098,
            "src": "229:28:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1902,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "229:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1905,
            "name": "tokenPrice",
            "nodeType": "VariableDeclaration",
            "scope": 2098,
            "src": "325:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1904,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "325:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1911,
            "name": "Purchased",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1907,
                  "indexed": false,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1911,
                  "src": "373:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1909,
                  "indexed": false,
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1911,
                  "src": "391:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "391:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "372:37:12"
            },
            "src": "357:53:12"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1919,
            "name": "PriceChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1913,
                  "indexed": false,
                  "name": "changer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "443:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1915,
                  "indexed": false,
                  "name": "oldPriceInWei",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "468:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1914,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1917,
                  "indexed": false,
                  "name": "newPriceInWei",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "499:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "499:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "433:93:12"
            },
            "src": "415:112:12"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1923,
            "name": "PaymentWithdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1921,
                  "indexed": false,
                  "name": "withdrawer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1923,
                  "src": "555:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "555:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "554:20:12"
            },
            "src": "532:43:12"
          },
          {
            "body": {
              "id": 1940,
              "nodeType": "Block",
              "src": "862:92:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1930,
                      "name": "mashupToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1901,
                      "src": "872:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MashUpToken_$1896",
                        "typeString": "contract MashUpToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1932,
                          "name": "deployedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1925,
                          "src": "898:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1931,
                        "name": "MashUpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1896,
                        "src": "886:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MashUpToken_$1896_$",
                          "typeString": "type(contract MashUpToken)"
                        }
                      },
                      "id": 1933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "886:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MashUpToken_$1896",
                        "typeString": "contract MashUpToken"
                      }
                    },
                    "src": "872:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MashUpToken_$1896",
                      "typeString": "contract MashUpToken"
                    }
                  },
                  "id": 1935,
                  "nodeType": "ExpressionStatement",
                  "src": "872:42:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1936,
                      "name": "mashupTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1903,
                      "src": "924:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1937,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1927,
                      "src": "940:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "924:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1939,
                  "nodeType": "ExpressionStatement",
                  "src": "924:23:12"
                }
              ]
            },
            "documentation": "@notice Create a new MashUp Token trading app\n     * @param deployedAddress address Deployed address of the MashUpToken contract\n@param tokenId uint256 TokenID to trade with this app",
            "id": 1941,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1925,
                  "name": "deployedAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1941,
                  "src": "813:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1924,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "813:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1927,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1941,
                  "src": "838:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "838:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "812:42:12"
            },
            "returnParameters": {
              "id": 1929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "862:0:12"
            },
            "scope": 2098,
            "src": "801:153:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1994,
              "nodeType": "Block",
              "src": "1123:663:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1945,
                          "name": "tokenPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1905,
                          "src": "1154:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1167:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1154:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e206d7573742068617665206e6f6e2d7a65726f207072696365206265666f72652069742063616e206265206672616e636869736564",
                        "id": 1948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1182:60:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c87d2a30039208080f6344ac41c23feb272d9d49cd6396a3d09624277f33294",
                          "typeString": "literal_string \"Token must have non-zero price before it can be franchised\""
                        },
                        "value": "Token must have non-zero price before it can be franchised"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c87d2a30039208080f6344ac41c23feb272d9d49cd6396a3d09624277f33294",
                          "typeString": "literal_string \"Token must have non-zero price before it can be franchised\""
                        }
                      ],
                      "id": 1944,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2728,
                        2729
                      ],
                      "referencedDeclaration": 2729,
                      "src": "1133:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1133:119:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1950,
                  "nodeType": "ExpressionStatement",
                  "src": "1133:119:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1952,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2725,
                            "src": "1283:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1283:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1954,
                          "name": "tokenPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1905,
                          "src": "1296:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1283:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d7573742070726f766964652065746820746f206672616e63686973652074686520746f6b656e",
                        "id": 1956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1320:41:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db1c4afa70070234d21e4fbdb1a4eaae774abfde4abd58eba615b76969de06b4",
                          "typeString": "literal_string \"Must provide eth to franchise the token\""
                        },
                        "value": "Must provide eth to franchise the token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db1c4afa70070234d21e4fbdb1a4eaae774abfde4abd58eba615b76969de06b4",
                          "typeString": "literal_string \"Must provide eth to franchise the token\""
                        }
                      ],
                      "id": 1951,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2728,
                        2729
                      ],
                      "referencedDeclaration": 2729,
                      "src": "1262:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1262:109:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1958,
                  "nodeType": "ExpressionStatement",
                  "src": "1262:109:12"
                },
                {
                  "assignments": [
                    1960
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1960,
                      "name": "newOwner",
                      "nodeType": "VariableDeclaration",
                      "scope": 1994,
                      "src": "1382:16:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1959,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1382:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1963,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1961,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2725,
                      "src": "1401:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1401:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1382:29:12"
                },
                {
                  "assignments": [
                    1965
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1965,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 1994,
                      "src": "1421:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1964,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1421:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1970,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1968,
                        "name": "mashupTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1903,
                        "src": "1457:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1966,
                        "name": "mashupToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1901,
                        "src": "1437:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MashUpToken_$1896",
                          "typeString": "contract MashUpToken"
                        }
                      },
                      "id": 1967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 614,
                      "src": "1437:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 1969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1421:50:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1979,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1965,
                        "src": "1573:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1980,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1960,
                        "src": "1592:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1981,
                        "name": "mashupTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1903,
                        "src": "1614:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 1982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1641:2:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1976,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2725,
                            "src": "1549:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1549:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1971,
                            "name": "mashupToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1901,
                            "src": "1514:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MashUpToken_$1896",
                              "typeString": "contract MashUpToken"
                            }
                          },
                          "id": 1974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "safeTransferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 775,
                          "src": "1514:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                            "typeString": "function (address,address,uint256,bytes memory) payable external"
                          }
                        },
                        "id": 1975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1514:34:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$value_$",
                          "typeString": "function (uint256) pure returns (function (address,address,uint256,bytes memory) payable external)"
                        }
                      },
                      "id": 1978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1514:45:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$value",
                        "typeString": "function (address,address,uint256,bytes memory) payable external"
                      }
                    },
                    "id": 1983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1514:139:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1984,
                  "nodeType": "ExpressionStatement",
                  "src": "1514:139:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1730:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 1985,
                      "name": "setTokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2031,
                      "src": "1716:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1716:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1988,
                  "nodeType": "ExpressionStatement",
                  "src": "1716:16:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1990,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1960,
                        "src": "1758:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1991,
                        "name": "tokenPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1905,
                        "src": "1768:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1989,
                      "name": "Purchased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1911,
                      "src": "1748:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1748:31:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1993,
                  "nodeType": "EmitStatement",
                  "src": "1743:36:12"
                }
              ]
            },
            "documentation": "@notice Provides a way to become a franchisor of a MashUp token for a fee\nEmits a Purchased event",
            "id": 1995,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1105:2:12"
            },
            "returnParameters": {
              "id": 1943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1123:0:12"
            },
            "scope": 2098,
            "src": "1088:698:12",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2030,
              "nodeType": "Block",
              "src": "2000:372:12",
              "statements": [
                {
                  "assignments": [
                    2001
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2001,
                      "name": "currentOwner",
                      "nodeType": "VariableDeclaration",
                      "scope": 2030,
                      "src": "2010:20:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2000,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2010:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2006,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2004,
                        "name": "mashupTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1903,
                        "src": "2053:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2002,
                        "name": "mashupToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1901,
                        "src": "2033:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MashUpToken_$1896",
                          "typeString": "contract MashUpToken"
                        }
                      },
                      "id": 2003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 614,
                      "src": "2033:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 2005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2033:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2010:57:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2008,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2725,
                            "src": "2142:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2142:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2010,
                          "name": "currentOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2001,
                          "src": "2156:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2142:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c7920746865206f776e65722063616e206368616e67652074686520746f6b656e207072696365",
                        "id": 2012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2182:43:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eea1d6680cedc31b44d88c0af8cb14519aea90dcf44b3e2afbb82981a94a4ddd",
                          "typeString": "literal_string \"Only the owner can change the token price\""
                        },
                        "value": "Only the owner can change the token price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eea1d6680cedc31b44d88c0af8cb14519aea90dcf44b3e2afbb82981a94a4ddd",
                          "typeString": "literal_string \"Only the owner can change the token price\""
                        }
                      ],
                      "id": 2007,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2728,
                        2729
                      ],
                      "referencedDeclaration": 2729,
                      "src": "2121:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2121:114:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2014,
                  "nodeType": "ExpressionStatement",
                  "src": "2121:114:12"
                },
                {
                  "assignments": [
                    2016
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2016,
                      "name": "oldPrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 2030,
                      "src": "2245:16:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2015,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2245:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2018,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2017,
                    "name": "tokenPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1905,
                    "src": "2264:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2245:29:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2019,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1905,
                      "src": "2284:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2020,
                      "name": "newPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1997,
                      "src": "2297:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2284:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2022,
                  "nodeType": "ExpressionStatement",
                  "src": "2284:21:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2024,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2725,
                          "src": "2334:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2334:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2026,
                        "name": "oldPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2016,
                        "src": "2346:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2027,
                        "name": "newPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1997,
                        "src": "2356:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2023,
                      "name": "PriceChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1919,
                      "src": "2321:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2321:44:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2029,
                  "nodeType": "EmitStatement",
                  "src": "2316:49:12"
                }
              ]
            },
            "documentation": "@notice Sets the token price given a tokenId\nEmits a PriceChanged event\n@param newPrice uint256 The new token price in Wei",
            "id": 2031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTokenPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1997,
                  "name": "newPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 2031,
                  "src": "1975:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1975:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1974:18:12"
            },
            "returnParameters": {
              "id": 1999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2000:0:12"
            },
            "scope": 2098,
            "src": "1952:420:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2041,
              "nodeType": "Block",
              "src": "2532:58:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2038,
                        "name": "mashupTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1903,
                        "src": "2569:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2036,
                        "name": "mashupToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1901,
                        "src": "2549:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MashUpToken_$1896",
                          "typeString": "contract MashUpToken"
                        }
                      },
                      "id": 2037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 614,
                      "src": "2549:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 2039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2549:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2035,
                  "id": 2040,
                  "nodeType": "Return",
                  "src": "2542:41:12"
                }
              ]
            },
            "documentation": "@notice Gets current token owner\n@return address Address of current owner",
            "id": 2042,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2499:2:12"
            },
            "returnParameters": {
              "id": 2035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2034,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2042,
                  "src": "2523:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2523:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2522:9:12"
            },
            "scope": 2098,
            "src": "2482:108:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2054,
              "nodeType": "Block",
              "src": "2777:79:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2049,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2725,
                          "src": "2823:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2823:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2051,
                        "name": "mashupTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1903,
                        "src": "2835:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2047,
                        "name": "mashupToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1901,
                        "src": "2794:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MashUpToken_$1896",
                          "typeString": "contract MashUpToken"
                        }
                      },
                      "id": 2048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "paymentBalanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 216,
                      "src": "2794:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 2052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2794:55:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2046,
                  "id": 2053,
                  "nodeType": "Return",
                  "src": "2787:62:12"
                }
              ]
            },
            "documentation": "@notice Gets current payment balance of your token payments\n@return uint256 Payment balance in Wei",
            "id": 2055,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2744:2:12"
            },
            "returnParameters": {
              "id": 2046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2045,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2055,
                  "src": "2768:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2044,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2768:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2767:9:12"
            },
            "scope": 2098,
            "src": "2725:131:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2071,
              "nodeType": "Block",
              "src": "3095:115:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2061,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2725,
                          "src": "3133:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3133:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2063,
                        "name": "mashupTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1903,
                        "src": "3145:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2058,
                        "name": "mashupToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1901,
                        "src": "3105:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MashUpToken_$1896",
                          "typeString": "contract MashUpToken"
                        }
                      },
                      "id": 2060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawPayment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 184,
                      "src": "3105:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256) external"
                      }
                    },
                    "id": 2064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3105:54:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2065,
                  "nodeType": "ExpressionStatement",
                  "src": "3105:54:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2067,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2725,
                          "src": "3192:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3192:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2066,
                      "name": "PaymentWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1923,
                      "src": "3175:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3175:28:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2070,
                  "nodeType": "EmitStatement",
                  "src": "3170:33:12"
                }
              ]
            },
            "documentation": "@notice Use to widthraws eth from the payments you recieved during franchising\nEmits a PaymentWithdrawn event\n@dev Calls the withdrawPayment function on the MashUpToken",
            "id": 2072,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3085:2:12"
            },
            "returnParameters": {
              "id": 2057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3095:0:12"
            },
            "scope": 2098,
            "src": "3068:142:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2082,
              "nodeType": "Block",
              "src": "3374:59:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2079,
                        "name": "mashupTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1903,
                        "src": "3412:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2077,
                        "name": "mashupToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1901,
                        "src": "3391:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MashUpToken_$1896",
                          "typeString": "contract MashUpToken"
                        }
                      },
                      "id": 2078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1474,
                      "src": "3391:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory)"
                      }
                    },
                    "id": 2080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3391:35:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 2076,
                  "id": 2081,
                  "nodeType": "Return",
                  "src": "3384:42:12"
                }
              ]
            },
            "documentation": "@notice  Gets the metadataURI for the token\n@return string token URI",
            "id": 2083,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3335:2:12"
            },
            "returnParameters": {
              "id": 2076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2075,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "3359:13:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2074,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3359:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3358:15:12"
            },
            "scope": 2098,
            "src": "3315:118:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2096,
              "nodeType": "Block",
              "src": "3731:100:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2092,
                        "name": "possibleFranchisor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2085,
                        "src": "3790:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2093,
                        "name": "mashupTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1903,
                        "src": "3810:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2090,
                        "name": "mashupToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1901,
                        "src": "3760:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MashUpToken_$1896",
                          "typeString": "contract MashUpToken"
                        }
                      },
                      "id": 2091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isTokenFranchisor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1870,
                      "src": "3760:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) view external returns (bool)"
                      }
                    },
                    "id": 2094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3760:64:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2089,
                  "id": 2095,
                  "nodeType": "Return",
                  "src": "3741:83:12"
                }
              ]
            },
            "documentation": "@notice Returns true/false if the address provided is for a franchisor\n@param possibleFranchisor address The address of the account\n@return bool",
            "id": 2097,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTokenFranchisor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2085,
                  "name": "possibleFranchisor",
                  "nodeType": "VariableDeclaration",
                  "scope": 2097,
                  "src": "3648:26:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2084,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3648:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3647:28:12"
            },
            "returnParameters": {
              "id": 2089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2088,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2097,
                  "src": "3721:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2087,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3721:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3720:6:12"
            },
            "scope": 2098,
            "src": "3621:210:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2099,
        "src": "55:3778:12"
      }
    ],
    "src": "0:3834:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "56": {
      "events": {
        "0x832e43df4de2c3bcddde0796ab3950a40343a9a1f5f39d6b25c0d670877f4e22": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "withdrawer",
              "type": "address"
            }
          ],
          "name": "PaymentWithdrawn",
          "type": "event"
        },
        "0x4d624906ce6fd4e4b8b649463516ff505029a1903a8cc34bd82b4ca0f9a479de": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "changer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldPriceInWei",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newPriceInWei",
              "type": "uint256"
            }
          ],
          "name": "PriceChanged",
          "type": "event"
        },
        "0xa512fb2532ca8587f236380171326ebb69670e86a2ba0c4412a3fcca4c3ada9b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "weiAmount",
              "type": "uint256"
            }
          ],
          "name": "Purchased",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x7e94B82dADe42AD33d1Bb87E2774514BFe98e9ac",
      "transactionHash": "0xc1269acbecaa7212bb8bdc74dca61cbb8d11beb66453404af0db2adc005e39d9"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-15T11:00:13.633Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "constructor": {
        "params": {
          "deployedAddress": "address Deployed address of the MashUpToken contract",
          "tokenId": "uint256 TokenID to trade with this app"
        }
      },
      "getBalance()": {
        "return": "uint256 Payment balance in Wei"
      },
      "getOwner()": {
        "return": "address Address of current owner"
      },
      "getTokenURI()": {
        "return": "string token URI"
      },
      "isTokenFranchisor(address)": {
        "params": {
          "possibleFranchisor": "address The address of the account"
        },
        "return": "bool"
      },
      "setTokenPrice(uint256)": {
        "params": {
          "newPrice": "uint256 The new token price in Wei"
        }
      },
      "withdraw()": {
        "details": "Calls the withdrawPayment function on the MashUpToken"
      }
    }
  },
  "userdoc": {
    "methods": {
      "constructor": "Create a new MashUp Token trading app",
      "getBalance()": {
        "notice": "Gets current payment balance of your token payments"
      },
      "getOwner()": {
        "notice": "Gets current token owner"
      },
      "getTokenURI()": {
        "notice": "Gets the metadataURI for the token"
      },
      "isTokenFranchisor(address)": {
        "notice": "Returns true/false if the address provided is for a franchisor"
      },
      "purchase()": {
        "notice": "Provides a way to become a franchisor of a MashUp token for a fee Emits a Purchased event"
      },
      "setTokenPrice(uint256)": {
        "notice": "Sets the token price given a tokenId Emits a PriceChanged event"
      },
      "withdraw()": {
        "notice": "Use to widthraws eth from the payments you recieved during franchising Emits a PaymentWithdrawn event"
      }
    }
  }
}